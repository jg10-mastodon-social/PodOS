/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Contact, ContactsModule, Email, Group, PhoneNumber } from "@solid-data-modules/contacts-rdflib";
export { Contact, ContactsModule, Email, Group, PhoneNumber } from "@solid-data-modules/contacts-rdflib";
export namespace Components {
    interface PosContactsAddressBookPage {
        "contactsModule": ContactsModule;
        "uri": string;
    }
    interface PosContactsApp {
    }
    interface PosContactsContact {
        "contactsModule": ContactsModule;
        "uri": string;
    }
    interface PosContactsContactDetails {
        "contactsModule": ContactsModule;
        "uri": string;
    }
    interface PosContactsContactList {
        "contacts": Contact[];
    }
    interface PosContactsEmailAddresses {
        "emailAddresses": Email[];
    }
    interface PosContactsGroup {
        "contactsModule": ContactsModule;
        "uri": string;
    }
    interface PosContactsGroupList {
        "groups": Group[];
    }
    interface PosContactsPhoneNumbers {
        "phoneNumbers": PhoneNumber[];
    }
    interface PosContactsRouter {
    }
    interface PosContactsWelcomePage {
    }
}
export interface PosContactsContactDetailsCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPosContactsContactDetailsElement;
}
export interface PosContactsContactListCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPosContactsContactListElement;
}
export interface PosContactsGroupListCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPosContactsGroupListElement;
}
export interface PosContactsRouterCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPosContactsRouterElement;
}
export interface PosContactsWelcomePageCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPosContactsWelcomePageElement;
}
declare global {
    interface HTMLPosContactsAddressBookPageElement extends Components.PosContactsAddressBookPage, HTMLStencilElement {
    }
    var HTMLPosContactsAddressBookPageElement: {
        prototype: HTMLPosContactsAddressBookPageElement;
        new (): HTMLPosContactsAddressBookPageElement;
    };
    interface HTMLPosContactsAppElement extends Components.PosContactsApp, HTMLStencilElement {
    }
    var HTMLPosContactsAppElement: {
        prototype: HTMLPosContactsAppElement;
        new (): HTMLPosContactsAppElement;
    };
    interface HTMLPosContactsContactElement extends Components.PosContactsContact, HTMLStencilElement {
    }
    var HTMLPosContactsContactElement: {
        prototype: HTMLPosContactsContactElement;
        new (): HTMLPosContactsContactElement;
    };
    interface HTMLPosContactsContactDetailsElementEventMap {
        "pod-os-contacts:contact-closed": void;
    }
    interface HTMLPosContactsContactDetailsElement extends Components.PosContactsContactDetails, HTMLStencilElement {
        addEventListener<K extends keyof HTMLPosContactsContactDetailsElementEventMap>(type: K, listener: (this: HTMLPosContactsContactDetailsElement, ev: PosContactsContactDetailsCustomEvent<HTMLPosContactsContactDetailsElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLPosContactsContactDetailsElementEventMap>(type: K, listener: (this: HTMLPosContactsContactDetailsElement, ev: PosContactsContactDetailsCustomEvent<HTMLPosContactsContactDetailsElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLPosContactsContactDetailsElement: {
        prototype: HTMLPosContactsContactDetailsElement;
        new (): HTMLPosContactsContactDetailsElement;
    };
    interface HTMLPosContactsContactListElementEventMap {
        "pod-os-contacts:contact-selected": Contact;
    }
    interface HTMLPosContactsContactListElement extends Components.PosContactsContactList, HTMLStencilElement {
        addEventListener<K extends keyof HTMLPosContactsContactListElementEventMap>(type: K, listener: (this: HTMLPosContactsContactListElement, ev: PosContactsContactListCustomEvent<HTMLPosContactsContactListElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLPosContactsContactListElementEventMap>(type: K, listener: (this: HTMLPosContactsContactListElement, ev: PosContactsContactListCustomEvent<HTMLPosContactsContactListElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLPosContactsContactListElement: {
        prototype: HTMLPosContactsContactListElement;
        new (): HTMLPosContactsContactListElement;
    };
    interface HTMLPosContactsEmailAddressesElement extends Components.PosContactsEmailAddresses, HTMLStencilElement {
    }
    var HTMLPosContactsEmailAddressesElement: {
        prototype: HTMLPosContactsEmailAddressesElement;
        new (): HTMLPosContactsEmailAddressesElement;
    };
    interface HTMLPosContactsGroupElement extends Components.PosContactsGroup, HTMLStencilElement {
    }
    var HTMLPosContactsGroupElement: {
        prototype: HTMLPosContactsGroupElement;
        new (): HTMLPosContactsGroupElement;
    };
    interface HTMLPosContactsGroupListElementEventMap {
        "pod-os-contacts:group-selected": Group;
    }
    interface HTMLPosContactsGroupListElement extends Components.PosContactsGroupList, HTMLStencilElement {
        addEventListener<K extends keyof HTMLPosContactsGroupListElementEventMap>(type: K, listener: (this: HTMLPosContactsGroupListElement, ev: PosContactsGroupListCustomEvent<HTMLPosContactsGroupListElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLPosContactsGroupListElementEventMap>(type: K, listener: (this: HTMLPosContactsGroupListElement, ev: PosContactsGroupListCustomEvent<HTMLPosContactsGroupListElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLPosContactsGroupListElement: {
        prototype: HTMLPosContactsGroupListElement;
        new (): HTMLPosContactsGroupListElement;
    };
    interface HTMLPosContactsPhoneNumbersElement extends Components.PosContactsPhoneNumbers, HTMLStencilElement {
    }
    var HTMLPosContactsPhoneNumbersElement: {
        prototype: HTMLPosContactsPhoneNumbersElement;
        new (): HTMLPosContactsPhoneNumbersElement;
    };
    interface HTMLPosContactsRouterElementEventMap {
        "pod-os:init": any;
    }
    interface HTMLPosContactsRouterElement extends Components.PosContactsRouter, HTMLStencilElement {
        addEventListener<K extends keyof HTMLPosContactsRouterElementEventMap>(type: K, listener: (this: HTMLPosContactsRouterElement, ev: PosContactsRouterCustomEvent<HTMLPosContactsRouterElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLPosContactsRouterElementEventMap>(type: K, listener: (this: HTMLPosContactsRouterElement, ev: PosContactsRouterCustomEvent<HTMLPosContactsRouterElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLPosContactsRouterElement: {
        prototype: HTMLPosContactsRouterElement;
        new (): HTMLPosContactsRouterElement;
    };
    interface HTMLPosContactsWelcomePageElementEventMap {
        "pod-os-contacts:open-address-book": string;
    }
    interface HTMLPosContactsWelcomePageElement extends Components.PosContactsWelcomePage, HTMLStencilElement {
        addEventListener<K extends keyof HTMLPosContactsWelcomePageElementEventMap>(type: K, listener: (this: HTMLPosContactsWelcomePageElement, ev: PosContactsWelcomePageCustomEvent<HTMLPosContactsWelcomePageElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLPosContactsWelcomePageElementEventMap>(type: K, listener: (this: HTMLPosContactsWelcomePageElement, ev: PosContactsWelcomePageCustomEvent<HTMLPosContactsWelcomePageElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLPosContactsWelcomePageElement: {
        prototype: HTMLPosContactsWelcomePageElement;
        new (): HTMLPosContactsWelcomePageElement;
    };
    interface HTMLElementTagNameMap {
        "pos-contacts-address-book-page": HTMLPosContactsAddressBookPageElement;
        "pos-contacts-app": HTMLPosContactsAppElement;
        "pos-contacts-contact": HTMLPosContactsContactElement;
        "pos-contacts-contact-details": HTMLPosContactsContactDetailsElement;
        "pos-contacts-contact-list": HTMLPosContactsContactListElement;
        "pos-contacts-email-addresses": HTMLPosContactsEmailAddressesElement;
        "pos-contacts-group": HTMLPosContactsGroupElement;
        "pos-contacts-group-list": HTMLPosContactsGroupListElement;
        "pos-contacts-phone-numbers": HTMLPosContactsPhoneNumbersElement;
        "pos-contacts-router": HTMLPosContactsRouterElement;
        "pos-contacts-welcome-page": HTMLPosContactsWelcomePageElement;
    }
}
declare namespace LocalJSX {
    interface PosContactsAddressBookPage {
        "contactsModule"?: ContactsModule;
        "uri"?: string;
    }
    interface PosContactsApp {
    }
    interface PosContactsContact {
        "contactsModule"?: ContactsModule;
        "uri"?: string;
    }
    interface PosContactsContactDetails {
        "contactsModule"?: ContactsModule;
        "onPod-os-contacts:contact-closed"?: (event: PosContactsContactDetailsCustomEvent<void>) => void;
        "uri"?: string;
    }
    interface PosContactsContactList {
        "contacts"?: Contact[];
        "onPod-os-contacts:contact-selected"?: (event: PosContactsContactListCustomEvent<Contact>) => void;
    }
    interface PosContactsEmailAddresses {
        "emailAddresses": Email[];
    }
    interface PosContactsGroup {
        "contactsModule"?: ContactsModule;
        "uri"?: string;
    }
    interface PosContactsGroupList {
        "groups"?: Group[];
        "onPod-os-contacts:group-selected"?: (event: PosContactsGroupListCustomEvent<Group>) => void;
    }
    interface PosContactsPhoneNumbers {
        "phoneNumbers": PhoneNumber[];
    }
    interface PosContactsRouter {
        "onPod-os:init"?: (event: PosContactsRouterCustomEvent<any>) => void;
    }
    interface PosContactsWelcomePage {
        "onPod-os-contacts:open-address-book"?: (event: PosContactsWelcomePageCustomEvent<string>) => void;
    }
    interface IntrinsicElements {
        "pos-contacts-address-book-page": PosContactsAddressBookPage;
        "pos-contacts-app": PosContactsApp;
        "pos-contacts-contact": PosContactsContact;
        "pos-contacts-contact-details": PosContactsContactDetails;
        "pos-contacts-contact-list": PosContactsContactList;
        "pos-contacts-email-addresses": PosContactsEmailAddresses;
        "pos-contacts-group": PosContactsGroup;
        "pos-contacts-group-list": PosContactsGroupList;
        "pos-contacts-phone-numbers": PosContactsPhoneNumbers;
        "pos-contacts-router": PosContactsRouter;
        "pos-contacts-welcome-page": PosContactsWelcomePage;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "pos-contacts-address-book-page": LocalJSX.PosContactsAddressBookPage & JSXBase.HTMLAttributes<HTMLPosContactsAddressBookPageElement>;
            "pos-contacts-app": LocalJSX.PosContactsApp & JSXBase.HTMLAttributes<HTMLPosContactsAppElement>;
            "pos-contacts-contact": LocalJSX.PosContactsContact & JSXBase.HTMLAttributes<HTMLPosContactsContactElement>;
            "pos-contacts-contact-details": LocalJSX.PosContactsContactDetails & JSXBase.HTMLAttributes<HTMLPosContactsContactDetailsElement>;
            "pos-contacts-contact-list": LocalJSX.PosContactsContactList & JSXBase.HTMLAttributes<HTMLPosContactsContactListElement>;
            "pos-contacts-email-addresses": LocalJSX.PosContactsEmailAddresses & JSXBase.HTMLAttributes<HTMLPosContactsEmailAddressesElement>;
            "pos-contacts-group": LocalJSX.PosContactsGroup & JSXBase.HTMLAttributes<HTMLPosContactsGroupElement>;
            "pos-contacts-group-list": LocalJSX.PosContactsGroupList & JSXBase.HTMLAttributes<HTMLPosContactsGroupListElement>;
            "pos-contacts-phone-numbers": LocalJSX.PosContactsPhoneNumbers & JSXBase.HTMLAttributes<HTMLPosContactsPhoneNumbersElement>;
            "pos-contacts-router": LocalJSX.PosContactsRouter & JSXBase.HTMLAttributes<HTMLPosContactsRouterElement>;
            "pos-contacts-welcome-page": LocalJSX.PosContactsWelcomePage & JSXBase.HTMLAttributes<HTMLPosContactsWelcomePageElement>;
        }
    }
}
