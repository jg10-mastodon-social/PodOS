/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Contact, ContactsModule, Email, Group, PhoneNumber } from "@solid-data-modules/contacts-rdflib";
export { Contact, ContactsModule, Email, Group, PhoneNumber } from "@solid-data-modules/contacts-rdflib";
export namespace Components {
    interface PosContactsAddressBookPage {
        "contactsModule": ContactsModule;
        "uri": string;
    }
    interface PosContactsApp {
    }
    interface PosContactsContact {
        "contactsModule": ContactsModule;
        "uri": string;
    }
    interface PosContactsContactDetails {
        "contactsModule": ContactsModule;
        "uri": string;
    }
    interface PosContactsContactList {
        "contacts": Contact[];
    }
    interface PosContactsCreateNewContact {
        "addressBookUri": string;
    }
    interface PosContactsCreateNewContactForm {
        "addressBookUri": string;
    }
    interface PosContactsEmailAddresses {
        "emailAddresses": Email[];
    }
    interface PosContactsGroup {
        "contactsModule": ContactsModule;
        "uri": string;
    }
    interface PosContactsGroupDetails {
        "contactsModule": ContactsModule;
        "uri": string;
    }
    interface PosContactsGroupList {
        "groups": Group[];
    }
    interface PosContactsListAddressBooks {
        "webId": string;
    }
    interface PosContactsLoadingSpinner {
        "defer": number;
    }
    interface PosContactsOpenAddressBook {
    }
    interface PosContactsPhoneNumbers {
        "phoneNumbers": PhoneNumber[];
    }
    interface PosContactsRouter {
    }
    interface PosContactsWelcomePage {
    }
}
export interface PosContactsContactDetailsCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPosContactsContactDetailsElement;
}
export interface PosContactsContactListCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPosContactsContactListElement;
}
export interface PosContactsCreateNewContactFormCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPosContactsCreateNewContactFormElement;
}
export interface PosContactsGroupListCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPosContactsGroupListElement;
}
export interface PosContactsListAddressBooksCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPosContactsListAddressBooksElement;
}
export interface PosContactsOpenAddressBookCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLPosContactsOpenAddressBookElement;
}
declare global {
    interface HTMLPosContactsAddressBookPageElement extends Components.PosContactsAddressBookPage, HTMLStencilElement {
    }
    var HTMLPosContactsAddressBookPageElement: {
        prototype: HTMLPosContactsAddressBookPageElement;
        new (): HTMLPosContactsAddressBookPageElement;
    };
    interface HTMLPosContactsAppElement extends Components.PosContactsApp, HTMLStencilElement {
    }
    var HTMLPosContactsAppElement: {
        prototype: HTMLPosContactsAppElement;
        new (): HTMLPosContactsAppElement;
    };
    interface HTMLPosContactsContactElement extends Components.PosContactsContact, HTMLStencilElement {
    }
    var HTMLPosContactsContactElement: {
        prototype: HTMLPosContactsContactElement;
        new (): HTMLPosContactsContactElement;
    };
    interface HTMLPosContactsContactDetailsElementEventMap {
        "pod-os-contacts:contact-closed": void;
    }
    interface HTMLPosContactsContactDetailsElement extends Components.PosContactsContactDetails, HTMLStencilElement {
        addEventListener<K extends keyof HTMLPosContactsContactDetailsElementEventMap>(type: K, listener: (this: HTMLPosContactsContactDetailsElement, ev: PosContactsContactDetailsCustomEvent<HTMLPosContactsContactDetailsElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLPosContactsContactDetailsElementEventMap>(type: K, listener: (this: HTMLPosContactsContactDetailsElement, ev: PosContactsContactDetailsCustomEvent<HTMLPosContactsContactDetailsElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLPosContactsContactDetailsElement: {
        prototype: HTMLPosContactsContactDetailsElement;
        new (): HTMLPosContactsContactDetailsElement;
    };
    interface HTMLPosContactsContactListElementEventMap {
        "pod-os-contacts:contact-selected": Contact;
    }
    interface HTMLPosContactsContactListElement extends Components.PosContactsContactList, HTMLStencilElement {
        addEventListener<K extends keyof HTMLPosContactsContactListElementEventMap>(type: K, listener: (this: HTMLPosContactsContactListElement, ev: PosContactsContactListCustomEvent<HTMLPosContactsContactListElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLPosContactsContactListElementEventMap>(type: K, listener: (this: HTMLPosContactsContactListElement, ev: PosContactsContactListCustomEvent<HTMLPosContactsContactListElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLPosContactsContactListElement: {
        prototype: HTMLPosContactsContactListElement;
        new (): HTMLPosContactsContactListElement;
    };
    interface HTMLPosContactsCreateNewContactElement extends Components.PosContactsCreateNewContact, HTMLStencilElement {
    }
    var HTMLPosContactsCreateNewContactElement: {
        prototype: HTMLPosContactsCreateNewContactElement;
        new (): HTMLPosContactsCreateNewContactElement;
    };
    interface HTMLPosContactsCreateNewContactFormElementEventMap {
        "pod-os:module": any;
        "pod-os-contacts:contact-created": Contact;
        "pod-os:error": any;
    }
    interface HTMLPosContactsCreateNewContactFormElement extends Components.PosContactsCreateNewContactForm, HTMLStencilElement {
        addEventListener<K extends keyof HTMLPosContactsCreateNewContactFormElementEventMap>(type: K, listener: (this: HTMLPosContactsCreateNewContactFormElement, ev: PosContactsCreateNewContactFormCustomEvent<HTMLPosContactsCreateNewContactFormElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLPosContactsCreateNewContactFormElementEventMap>(type: K, listener: (this: HTMLPosContactsCreateNewContactFormElement, ev: PosContactsCreateNewContactFormCustomEvent<HTMLPosContactsCreateNewContactFormElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLPosContactsCreateNewContactFormElement: {
        prototype: HTMLPosContactsCreateNewContactFormElement;
        new (): HTMLPosContactsCreateNewContactFormElement;
    };
    interface HTMLPosContactsEmailAddressesElement extends Components.PosContactsEmailAddresses, HTMLStencilElement {
    }
    var HTMLPosContactsEmailAddressesElement: {
        prototype: HTMLPosContactsEmailAddressesElement;
        new (): HTMLPosContactsEmailAddressesElement;
    };
    interface HTMLPosContactsGroupElement extends Components.PosContactsGroup, HTMLStencilElement {
    }
    var HTMLPosContactsGroupElement: {
        prototype: HTMLPosContactsGroupElement;
        new (): HTMLPosContactsGroupElement;
    };
    interface HTMLPosContactsGroupDetailsElement extends Components.PosContactsGroupDetails, HTMLStencilElement {
    }
    var HTMLPosContactsGroupDetailsElement: {
        prototype: HTMLPosContactsGroupDetailsElement;
        new (): HTMLPosContactsGroupDetailsElement;
    };
    interface HTMLPosContactsGroupListElementEventMap {
        "pod-os-contacts:group-selected": Group;
    }
    interface HTMLPosContactsGroupListElement extends Components.PosContactsGroupList, HTMLStencilElement {
        addEventListener<K extends keyof HTMLPosContactsGroupListElementEventMap>(type: K, listener: (this: HTMLPosContactsGroupListElement, ev: PosContactsGroupListCustomEvent<HTMLPosContactsGroupListElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLPosContactsGroupListElementEventMap>(type: K, listener: (this: HTMLPosContactsGroupListElement, ev: PosContactsGroupListCustomEvent<HTMLPosContactsGroupListElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLPosContactsGroupListElement: {
        prototype: HTMLPosContactsGroupListElement;
        new (): HTMLPosContactsGroupListElement;
    };
    interface HTMLPosContactsListAddressBooksElementEventMap {
        "pod-os:module": any;
    }
    interface HTMLPosContactsListAddressBooksElement extends Components.PosContactsListAddressBooks, HTMLStencilElement {
        addEventListener<K extends keyof HTMLPosContactsListAddressBooksElementEventMap>(type: K, listener: (this: HTMLPosContactsListAddressBooksElement, ev: PosContactsListAddressBooksCustomEvent<HTMLPosContactsListAddressBooksElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLPosContactsListAddressBooksElementEventMap>(type: K, listener: (this: HTMLPosContactsListAddressBooksElement, ev: PosContactsListAddressBooksCustomEvent<HTMLPosContactsListAddressBooksElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLPosContactsListAddressBooksElement: {
        prototype: HTMLPosContactsListAddressBooksElement;
        new (): HTMLPosContactsListAddressBooksElement;
    };
    interface HTMLPosContactsLoadingSpinnerElement extends Components.PosContactsLoadingSpinner, HTMLStencilElement {
    }
    var HTMLPosContactsLoadingSpinnerElement: {
        prototype: HTMLPosContactsLoadingSpinnerElement;
        new (): HTMLPosContactsLoadingSpinnerElement;
    };
    interface HTMLPosContactsOpenAddressBookElementEventMap {
        "pod-os-contacts:open-address-book": string;
    }
    interface HTMLPosContactsOpenAddressBookElement extends Components.PosContactsOpenAddressBook, HTMLStencilElement {
        addEventListener<K extends keyof HTMLPosContactsOpenAddressBookElementEventMap>(type: K, listener: (this: HTMLPosContactsOpenAddressBookElement, ev: PosContactsOpenAddressBookCustomEvent<HTMLPosContactsOpenAddressBookElementEventMap[K]>) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | AddEventListenerOptions): void;
        addEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | AddEventListenerOptions): void;
        removeEventListener<K extends keyof HTMLPosContactsOpenAddressBookElementEventMap>(type: K, listener: (this: HTMLPosContactsOpenAddressBookElement, ev: PosContactsOpenAddressBookCustomEvent<HTMLPosContactsOpenAddressBookElementEventMap[K]>) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof DocumentEventMap>(type: K, listener: (this: Document, ev: DocumentEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener<K extends keyof HTMLElementEventMap>(type: K, listener: (this: HTMLElement, ev: HTMLElementEventMap[K]) => any, options?: boolean | EventListenerOptions): void;
        removeEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: boolean | EventListenerOptions): void;
    }
    var HTMLPosContactsOpenAddressBookElement: {
        prototype: HTMLPosContactsOpenAddressBookElement;
        new (): HTMLPosContactsOpenAddressBookElement;
    };
    interface HTMLPosContactsPhoneNumbersElement extends Components.PosContactsPhoneNumbers, HTMLStencilElement {
    }
    var HTMLPosContactsPhoneNumbersElement: {
        prototype: HTMLPosContactsPhoneNumbersElement;
        new (): HTMLPosContactsPhoneNumbersElement;
    };
    interface HTMLPosContactsRouterElement extends Components.PosContactsRouter, HTMLStencilElement {
    }
    var HTMLPosContactsRouterElement: {
        prototype: HTMLPosContactsRouterElement;
        new (): HTMLPosContactsRouterElement;
    };
    interface HTMLPosContactsWelcomePageElement extends Components.PosContactsWelcomePage, HTMLStencilElement {
    }
    var HTMLPosContactsWelcomePageElement: {
        prototype: HTMLPosContactsWelcomePageElement;
        new (): HTMLPosContactsWelcomePageElement;
    };
    interface HTMLElementTagNameMap {
        "pos-contacts-address-book-page": HTMLPosContactsAddressBookPageElement;
        "pos-contacts-app": HTMLPosContactsAppElement;
        "pos-contacts-contact": HTMLPosContactsContactElement;
        "pos-contacts-contact-details": HTMLPosContactsContactDetailsElement;
        "pos-contacts-contact-list": HTMLPosContactsContactListElement;
        "pos-contacts-create-new-contact": HTMLPosContactsCreateNewContactElement;
        "pos-contacts-create-new-contact-form": HTMLPosContactsCreateNewContactFormElement;
        "pos-contacts-email-addresses": HTMLPosContactsEmailAddressesElement;
        "pos-contacts-group": HTMLPosContactsGroupElement;
        "pos-contacts-group-details": HTMLPosContactsGroupDetailsElement;
        "pos-contacts-group-list": HTMLPosContactsGroupListElement;
        "pos-contacts-list-address-books": HTMLPosContactsListAddressBooksElement;
        "pos-contacts-loading-spinner": HTMLPosContactsLoadingSpinnerElement;
        "pos-contacts-open-address-book": HTMLPosContactsOpenAddressBookElement;
        "pos-contacts-phone-numbers": HTMLPosContactsPhoneNumbersElement;
        "pos-contacts-router": HTMLPosContactsRouterElement;
        "pos-contacts-welcome-page": HTMLPosContactsWelcomePageElement;
    }
}
declare namespace LocalJSX {
    interface PosContactsAddressBookPage {
        "contactsModule"?: ContactsModule;
        "uri": string;
    }
    interface PosContactsApp {
    }
    interface PosContactsContact {
        "contactsModule"?: ContactsModule;
        "uri"?: string;
    }
    interface PosContactsContactDetails {
        "contactsModule": ContactsModule;
        "onPod-os-contacts:contact-closed"?: (event: PosContactsContactDetailsCustomEvent<void>) => void;
        "uri": string;
    }
    interface PosContactsContactList {
        "contacts": Contact[];
        "onPod-os-contacts:contact-selected"?: (event: PosContactsContactListCustomEvent<Contact>) => void;
    }
    interface PosContactsCreateNewContact {
        "addressBookUri": string;
    }
    interface PosContactsCreateNewContactForm {
        "addressBookUri": string;
        "onPod-os-contacts:contact-created"?: (event: PosContactsCreateNewContactFormCustomEvent<Contact>) => void;
        "onPod-os:error"?: (event: PosContactsCreateNewContactFormCustomEvent<any>) => void;
        "onPod-os:module"?: (event: PosContactsCreateNewContactFormCustomEvent<any>) => void;
    }
    interface PosContactsEmailAddresses {
        "emailAddresses": Email[];
    }
    interface PosContactsGroup {
        "contactsModule"?: ContactsModule;
        "uri"?: string;
    }
    interface PosContactsGroupDetails {
        "contactsModule": ContactsModule;
        "uri": string;
    }
    interface PosContactsGroupList {
        "groups"?: Group[];
        "onPod-os-contacts:group-selected"?: (event: PosContactsGroupListCustomEvent<Group>) => void;
    }
    interface PosContactsListAddressBooks {
        "onPod-os:module"?: (event: PosContactsListAddressBooksCustomEvent<any>) => void;
        "webId": string;
    }
    interface PosContactsLoadingSpinner {
        "defer"?: number;
    }
    interface PosContactsOpenAddressBook {
        "onPod-os-contacts:open-address-book"?: (event: PosContactsOpenAddressBookCustomEvent<string>) => void;
    }
    interface PosContactsPhoneNumbers {
        "phoneNumbers": PhoneNumber[];
    }
    interface PosContactsRouter {
    }
    interface PosContactsWelcomePage {
    }
    interface IntrinsicElements {
        "pos-contacts-address-book-page": PosContactsAddressBookPage;
        "pos-contacts-app": PosContactsApp;
        "pos-contacts-contact": PosContactsContact;
        "pos-contacts-contact-details": PosContactsContactDetails;
        "pos-contacts-contact-list": PosContactsContactList;
        "pos-contacts-create-new-contact": PosContactsCreateNewContact;
        "pos-contacts-create-new-contact-form": PosContactsCreateNewContactForm;
        "pos-contacts-email-addresses": PosContactsEmailAddresses;
        "pos-contacts-group": PosContactsGroup;
        "pos-contacts-group-details": PosContactsGroupDetails;
        "pos-contacts-group-list": PosContactsGroupList;
        "pos-contacts-list-address-books": PosContactsListAddressBooks;
        "pos-contacts-loading-spinner": PosContactsLoadingSpinner;
        "pos-contacts-open-address-book": PosContactsOpenAddressBook;
        "pos-contacts-phone-numbers": PosContactsPhoneNumbers;
        "pos-contacts-router": PosContactsRouter;
        "pos-contacts-welcome-page": PosContactsWelcomePage;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "pos-contacts-address-book-page": LocalJSX.PosContactsAddressBookPage & JSXBase.HTMLAttributes<HTMLPosContactsAddressBookPageElement>;
            "pos-contacts-app": LocalJSX.PosContactsApp & JSXBase.HTMLAttributes<HTMLPosContactsAppElement>;
            "pos-contacts-contact": LocalJSX.PosContactsContact & JSXBase.HTMLAttributes<HTMLPosContactsContactElement>;
            "pos-contacts-contact-details": LocalJSX.PosContactsContactDetails & JSXBase.HTMLAttributes<HTMLPosContactsContactDetailsElement>;
            "pos-contacts-contact-list": LocalJSX.PosContactsContactList & JSXBase.HTMLAttributes<HTMLPosContactsContactListElement>;
            "pos-contacts-create-new-contact": LocalJSX.PosContactsCreateNewContact & JSXBase.HTMLAttributes<HTMLPosContactsCreateNewContactElement>;
            "pos-contacts-create-new-contact-form": LocalJSX.PosContactsCreateNewContactForm & JSXBase.HTMLAttributes<HTMLPosContactsCreateNewContactFormElement>;
            "pos-contacts-email-addresses": LocalJSX.PosContactsEmailAddresses & JSXBase.HTMLAttributes<HTMLPosContactsEmailAddressesElement>;
            "pos-contacts-group": LocalJSX.PosContactsGroup & JSXBase.HTMLAttributes<HTMLPosContactsGroupElement>;
            "pos-contacts-group-details": LocalJSX.PosContactsGroupDetails & JSXBase.HTMLAttributes<HTMLPosContactsGroupDetailsElement>;
            "pos-contacts-group-list": LocalJSX.PosContactsGroupList & JSXBase.HTMLAttributes<HTMLPosContactsGroupListElement>;
            "pos-contacts-list-address-books": LocalJSX.PosContactsListAddressBooks & JSXBase.HTMLAttributes<HTMLPosContactsListAddressBooksElement>;
            "pos-contacts-loading-spinner": LocalJSX.PosContactsLoadingSpinner & JSXBase.HTMLAttributes<HTMLPosContactsLoadingSpinnerElement>;
            "pos-contacts-open-address-book": LocalJSX.PosContactsOpenAddressBook & JSXBase.HTMLAttributes<HTMLPosContactsOpenAddressBookElement>;
            "pos-contacts-phone-numbers": LocalJSX.PosContactsPhoneNumbers & JSXBase.HTMLAttributes<HTMLPosContactsPhoneNumbersElement>;
            "pos-contacts-router": LocalJSX.PosContactsRouter & JSXBase.HTMLAttributes<HTMLPosContactsRouterElement>;
            "pos-contacts-welcome-page": LocalJSX.PosContactsWelcomePage & JSXBase.HTMLAttributes<HTMLPosContactsWelcomePageElement>;
        }
    }
}
